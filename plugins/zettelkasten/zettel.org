#+TITLE: Zettelkasten-mode

* What
  
  This is an Emacs minor mode for enabling the [[https://zettelkasten.de/introduction/?utm_source=pocket_mylist][Zettelkasten method]]. My
  intention is to make it easier to work on a markdown-based
  Zettelkasten inside Emacs.

* Requirements

  + Markdown-mode
  + Markdown wiki mode (to enable wiki style links)

* Cruft code

  This is the "original" prototype of the code which was not written
  in a literate fashion. My intention is to refactor this until it is
  cleaner. I'd also like to start new features.
  #+BEGIN_SRC emacs-lisp
    (setq markdown-enable-wiki-links t)

    ;; Override this to get a different date file format
    (setq zettel-date-command "date +%Y-%m-%d_%k-%m-%S")

    ;; Override this to get a totally different file name if you'd like. Ex, make it
    ;; interactive and provide a string
    (defun zettel-get-file-name ()
      (substring
       (shell-command-to-string zettel-date-command)
       0			      ; Start from the beginning of the screen
       -1)) ; Go to the character before the end of the string. This discards a final newline

    ;; The path to your zettelkasten
    (setq zettel-path "~/Dropbox/zettelkasten")

  #+END_SRC

  
* Utilities

  #+BEGIN_SRC emacs-lisp
    (defun zettel-create-buffer-for-file-and-switch (new-file-path)
      "Creates a new buffer for a particular file, set up the backing
    file for that buffer to your provided path."
      (switch-to-buffer
       (create-file-buffer new-file-path))
      (set-visited-file-name new-file-path))
  #+END_SRC
  
* Main functions
  
** Create a new note

   #+BEGIN_SRC emacs-lisp
     (defun zettel-create-new ()
       "Create a new note in your zettelkasten using your name format"
       (interactive) 
       (setq path (concat
		   zettel-path
		   "/"
		   (zettel-get-file-name)
		   ".md"))
       (zettel-create-buffer-for-file-and-switch path))
   #+END_SRC

* The minor mode

  #+BEGIN_SRC emacs-lisp

    (define-minor-mode zettelkasten-mode
      "Toggle zettelkasten mode. 
    You shold probably bind 'zettel-create-new"
      :lighter " Zettel"
      :global t)
  #+END_SRC
* Provide feature

  #+BEGIN_SRC emacs-lisp
    (provide 'zettelkasten-mode)
  #+END_SRC

* Whishlist
** TODO Insert method

   The insert mehtod should basically call ~zettel-create-new~ but
   should also insert a link to the new file at wherever the current
   point is.
